{"ast":null,"code":"// movie-detail.component.ts\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let MovieDetailComponent = class MovieDetailComponent {\n  constructor(route, apiService, movieService, router) {\n    this.route = route;\n    this.apiService = apiService;\n    this.movieService = movieService;\n    this.router = router;\n    this.movieId = null;\n    this.errorMessage = null;\n    this.successMessage = null;\n    this.movieTitle = null;\n  }\n  ngOnInit() {\n    this.movieId = this.route.snapshot.paramMap.get('id');\n    if (this.movieId) {\n      this.movieService.getMovieTitle(this.movieId).subscribe(title => {\n        this.movieTitle = title;\n      }, error => {\n        console.error('Error fetching movie title:', error);\n      });\n    }\n  }\n  bookmarkMovie() {\n    const token = this.apiService.getToken();\n    if (!token) {\n      this.router.navigate(['/login']);\n      return;\n    }\n    if (this.movieId) {\n      // Call the /bookmark/:movieId route to bookmark the movie\n      this.apiService.bookmarkMovie(this.movieId, token).subscribe(response => {\n        console.log('Movie bookmarked successfully!', response);\n        this.successMessage = 'Movie bookmarked successfully!';\n        // Optionally, you can clear the success message after a certain time.\n        setTimeout(() => {\n          this.successMessage = null;\n        }, 5000); // Clear the message after 5 seconds (adjust the time as needed)\n      }, error => {\n        console.error('Error bookmarking movie:', error);\n        this.errorMessage = 'Error bookmarking movie. Please try again.';\n      });\n    }\n  }\n};\nMovieDetailComponent = __decorate([Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.css']\n})], MovieDetailComponent);","map":{"version":3,"names":["Component","MovieDetailComponent","constructor","route","apiService","movieService","router","movieId","errorMessage","successMessage","movieTitle","ngOnInit","snapshot","paramMap","get","getMovieTitle","subscribe","title","error","console","bookmarkMovie","token","getToken","navigate","response","log","setTimeout","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\GIT\\FinalProject2\\Frontend\\src\\app\\movie-detail\\movie-detail.component.ts"],"sourcesContent":["// movie-detail.component.ts\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../api.service'; \nimport { MovieService } from '../movie.service';\n\n@Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.css'],\n})\nexport class MovieDetailComponent implements OnInit {\n  movieId: string | null = null;\n  errorMessage: string | null = null;\n  successMessage: string | null = null;\n  movieTitle: string | null = null;\n\n  constructor(\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private movieService: MovieService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.movieId = this.route.snapshot.paramMap.get('id');\n\n    if (this.movieId) {\n      this.movieService.getMovieTitle(this.movieId).subscribe(\n        (title: string) => {\n          this.movieTitle = title;\n        },\n        (error: any) => {\n          console.error('Error fetching movie title:', error);\n        }\n      );\n    }\n  }\n\n  bookmarkMovie() {\n    const token = this.apiService.getToken();\n  \n    if (!token) {\n      this.router.navigate(['/login']);\n      return;\n    }\n  \n    if (this.movieId) {\n      // Call the /bookmark/:movieId route to bookmark the movie\n      this.apiService.bookmarkMovie(this.movieId, token).subscribe(\n        (response: any) => {\n          console.log('Movie bookmarked successfully!', response);\n          this.successMessage = 'Movie bookmarked successfully!';\n          // Optionally, you can clear the success message after a certain time.\n          setTimeout(() => {\n            this.successMessage = null;\n          }, 5000); // Clear the message after 5 seconds (adjust the time as needed)\n        },\n        (error: any) => {\n          console.error('Error bookmarking movie:', error);\n          this.errorMessage = 'Error bookmarking movie. Please try again.';\n        }\n      );\n    }\n  }\n}"],"mappings":"AAAA;;AAEA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAM/BC,YACUC,KAAqB,EACrBC,UAAsB,EACtBC,YAA0B,EAC1BC,MAAc;IAHd,KAAAH,KAAK,GAALA,KAAK;IACL,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,MAAM,GAANA,MAAM;IAThB,KAAAC,OAAO,GAAkB,IAAI;IAC7B,KAAAC,YAAY,GAAkB,IAAI;IAClC,KAAAC,cAAc,GAAkB,IAAI;IACpC,KAAAC,UAAU,GAAkB,IAAI;EAO7B;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACJ,OAAO,GAAG,IAAI,CAACJ,KAAK,CAACS,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAErD,IAAI,IAAI,CAACP,OAAO,EAAE;MAChB,IAAI,CAACF,YAAY,CAACU,aAAa,CAAC,IAAI,CAACR,OAAO,CAAC,CAACS,SAAS,CACpDC,KAAa,IAAI;QAChB,IAAI,CAACP,UAAU,GAAGO,KAAK;MACzB,CAAC,EACAC,KAAU,IAAI;QACbC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD,CAAC,CACF;;EAEL;EAEAE,aAAaA,CAAA;IACX,MAAMC,KAAK,GAAG,IAAI,CAACjB,UAAU,CAACkB,QAAQ,EAAE;IAExC,IAAI,CAACD,KAAK,EAAE;MACV,IAAI,CAACf,MAAM,CAACiB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC;;IAGF,IAAI,IAAI,CAAChB,OAAO,EAAE;MAChB;MACA,IAAI,CAACH,UAAU,CAACgB,aAAa,CAAC,IAAI,CAACb,OAAO,EAAEc,KAAK,CAAC,CAACL,SAAS,CACzDQ,QAAa,IAAI;QAChBL,OAAO,CAACM,GAAG,CAAC,gCAAgC,EAAED,QAAQ,CAAC;QACvD,IAAI,CAACf,cAAc,GAAG,gCAAgC;QACtD;QACAiB,UAAU,CAAC,MAAK;UACd,IAAI,CAACjB,cAAc,GAAG,IAAI;QAC5B,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACZ,CAAC,EACAS,KAAU,IAAI;QACbC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD,IAAI,CAACV,YAAY,GAAG,4CAA4C;MAClE,CAAC,CACF;;EAEL;CACD;AAtDYP,oBAAoB,GAAA0B,UAAA,EALhC3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACW7B,oBAAoB,CAsDhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}