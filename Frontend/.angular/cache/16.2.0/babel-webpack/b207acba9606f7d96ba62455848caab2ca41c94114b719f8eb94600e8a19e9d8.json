{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let RegisterComponent = class RegisterComponent {\n  constructor(formBuilder, authService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.registrationError = null;\n    this.registrationForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onSubmit() {\n    if (this.registrationForm.valid) {\n      const userData = this.registrationForm.value;\n      this.authService.registerUser(userData).subscribe(() => {\n        // Registration successful - handle it accordingly (e.g., navigate to a success page).\n      }, error => {\n        this.registrationError = 'Registration failed. Please try again.';\n        console.error('Registration error:', error);\n      });\n    }\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);","map":{"version":3,"names":["Component","Validators","RegisterComponent","constructor","formBuilder","authService","registrationError","registrationForm","group","name","required","email","address","password","minLength","onSubmit","valid","userData","value","registerUser","subscribe","error","console","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\GIT\\FinalProject3\\Frontend\\src\\app\\auth\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  registrationForm: FormGroup;\n  registrationError: string | null = null;\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthService) {\n    this.registrationForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit() {\n    if (this.registrationForm.valid) {\n      const userData = this.registrationForm.value;\n      this.authService.registerUser(userData).subscribe(\n        () => {\n          // Registration successful - handle it accordingly (e.g., navigate to a success page).\n        },\n        (error) => {\n          this.registrationError = 'Registration failed. Please try again.';\n          console.error('Registration error:', error);\n        }\n      );\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAI5BC,YAAoBC,WAAwB,EAAUC,WAAwB;IAA1D,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IAFjE,KAAAC,iBAAiB,GAAkB,IAAI;IAGrC,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MAC7CC,IAAI,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,KAAK,CAAC,CAAC;MACpDC,OAAO,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACS,QAAQ,CAAC;MAClCG,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACR,gBAAgB,CAACS,KAAK,EAAE;MAC/B,MAAMC,QAAQ,GAAG,IAAI,CAACV,gBAAgB,CAACW,KAAK;MAC5C,IAAI,CAACb,WAAW,CAACc,YAAY,CAACF,QAAQ,CAAC,CAACG,SAAS,CAC/C,MAAK;QACH;MAAA,CACD,EACAC,KAAK,IAAI;QACR,IAAI,CAACf,iBAAiB,GAAG,wCAAwC;QACjEgB,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C,CAAC,CACF;;EAEL;CACD;AA3BYnB,iBAAiB,GAAAqB,UAAA,EAL7BvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWxB,iBAAiB,CA2B7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}