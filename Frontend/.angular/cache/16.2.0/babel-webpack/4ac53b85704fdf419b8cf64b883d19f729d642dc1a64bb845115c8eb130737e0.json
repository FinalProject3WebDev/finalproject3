{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RegisterComponent = class RegisterComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.user = {\n      name: '',\n      email: '',\n      password: '',\n      role: 'member',\n      address: ''\n    };\n    this.errorMessage = '';\n  }\n  registerUser() {\n    this.errorMessage = ''; // Clear any previous error message\n    this.userService.register(this.user).subscribe(response => {\n      // Handle successful registration\n      console.log('Registration success:', response);\n      // Optionally, you can redirect to a login page or show a success message.\n      alert('Registration successful. You can now log in.');\n    }, error => {\n      // Handle registration error\n      console.error('Registration error:', error);\n      if (error.status === 400) {\n        this.errorMessage = 'Email or name is already in use.';\n      } else {\n        this.errorMessage = 'An error occurred during registration. Please try again later.';\n      }\n    });\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);","map":{"version":3,"names":["Component","RegisterComponent","constructor","userService","user","name","email","password","role","address","errorMessage","registerUser","register","subscribe","response","console","log","alert","error","status","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\GIT\\FinalProject3\\Frontend\\src\\app\\auth\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  user = {\n    name: '',\n    email: '',\n    password: '',\n    role: 'member',\n    address: ''\n  };\n  errorMessage: string = '';\n\n  constructor(private userService: UserService) { }\n\n  registerUser() {\n    this.errorMessage = ''; // Clear any previous error message\n\n    this.userService.register(this.user).subscribe(\n      (response) => {\n        // Handle successful registration\n        console.log('Registration success:', response);\n        // Optionally, you can redirect to a login page or show a success message.\n        alert('Registration successful. You can now log in.');\n      },\n      (error) => {\n        // Handle registration error\n        console.error('Registration error:', error);\n\n        if (error.status === 400) {\n          this.errorMessage = 'Email or name is already in use.';\n        } else {\n          this.errorMessage = 'An error occurred during registration. Please try again later.';\n        }\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAU5BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAT/B,KAAAC,IAAI,GAAG;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;KACV;IACD,KAAAC,YAAY,GAAW,EAAE;EAEuB;EAEhDC,YAAYA,CAAA;IACV,IAAI,CAACD,YAAY,GAAG,EAAE,CAAC,CAAC;IAExB,IAAI,CAACP,WAAW,CAACS,QAAQ,CAAC,IAAI,CAACR,IAAI,CAAC,CAACS,SAAS,CAC3CC,QAAQ,IAAI;MACX;MACAC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,QAAQ,CAAC;MAC9C;MACAG,KAAK,CAAC,8CAA8C,CAAC;IACvD,CAAC,EACAC,KAAK,IAAI;MACR;MACAH,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAE3C,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;QACxB,IAAI,CAACT,YAAY,GAAG,kCAAkC;OACvD,MAAM;QACL,IAAI,CAACA,YAAY,GAAG,gEAAgE;;IAExF,CAAC,CACF;EACH;CACD;AAlCYT,iBAAiB,GAAAmB,UAAA,EAL7BpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWtB,iBAAiB,CAkC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}