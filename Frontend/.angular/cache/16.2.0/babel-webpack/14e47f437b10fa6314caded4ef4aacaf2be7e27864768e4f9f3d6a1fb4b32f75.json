{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/router\";\nexport class RegisComponent {\n  constructor(formBuilder, authService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.errorMessage = '';\n    this.successMessage = '';\n    this.registrationForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onSubmit() {\n    if (this.registrationForm.valid) {\n      const formData = this.registrationForm.value;\n      this.authService.register(formData).subscribe(response => {\n        this.successMessage = response;\n        this.errorMessage = '';\n      }, error => {\n        this.errorMessage = error;\n        this.successMessage = '';\n      });\n    }\n  }\n}\n_class = RegisComponent;\n_class.ɵfac = function RegisComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-regis\"]],\n  decls: 44,\n  vars: 0,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"\"], [1, \"px-4\", \"py-5\", \"px-md-5\", \"text-center\", \"text-lg-start\", 2, \"background-color\", \"hsl(0, 0%, 100%)\"], [1, \"container\"], [1, \"row\", \"gx-lg-5\", \"align-items-center\"], [1, \"col-lg-6\", \"mb-5\", \"mb-lg-0\"], [1, \"my-5\", \"display-3\", \"fw-bold\", \"ls-tight\"], [1, \"text-primary\"], [1, \"card\"], [1, \"card-body\", \"py-5\", \"px-md-5\"], [1, \"row\"], [1, \"col-md-6\", \"mb-4\"], [1, \"form-outline\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"placeholder\", \"Name\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"placeholder\", \"Email\", \"required\", \"\", 1, \"form-control\"], [1, \"form-outline\", \"mb-4\"], [\"type\", \"text\", \"id\", \"address\", \"name\", \"address\", \"placeholder\", \"Address\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", 1, \"form-control\"], [1, \"text-center\"], [\"routerLink\", \"/login\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-4\", 2, \"margin\", \"5px\"], [\"routerLink\", \"/login\"]],\n  template: function RegisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n      i0.ɵɵelementStart(4, \"title\");\n      i0.ɵɵtext(5, \"Register\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"body\")(7, \"section\", 3)(8, \"div\", 4)(9, \"div\", 5)(10, \"div\", 6)(11, \"div\", 7)(12, \"h1\", 8);\n      i0.ɵɵtext(13, \" Register \");\n      i0.ɵɵelement(14, \"br\");\n      i0.ɵɵelementStart(15, \"span\", 9);\n      i0.ɵɵtext(16, \"Your Account\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"div\", 7)(18, \"div\", 10)(19, \"div\", 11)(20, \"div\", 5)(21, \"h2\");\n      i0.ɵɵtext(22, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"form\")(24, \"div\", 12)(25, \"div\", 13)(26, \"div\", 14);\n      i0.ɵɵelement(27, \"input\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 13)(29, \"div\", 14);\n      i0.ɵɵelement(30, \"input\", 16);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"div\", 17);\n      i0.ɵɵelement(32, \"input\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 17);\n      i0.ɵɵelement(34, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 20)(36, \"p\");\n      i0.ɵɵtext(37, \"Already have an account?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"button\", 21);\n      i0.ɵɵtext(39, \" Sign up \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(40, \"p\");\n      i0.ɵɵtext(41, \"Already have an account? \");\n      i0.ɵɵelementStart(42, \"a\", 22);\n      i0.ɵɵtext(43, \"Sign in\");\n      i0.ɵɵelementEnd()()()()()()()()()()()();\n    }\n  },\n  dependencies: [i3.RouterLink, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","RegisComponent","constructor","formBuilder","authService","errorMessage","successMessage","registrationForm","group","name","required","email","address","password","minLength","onSubmit","valid","formData","value","register","subscribe","response","error","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","selectors","decls","vars","consts","template","RegisComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\GIT\\FinalProject3\\Frontend\\src\\app\\auth\\regis\\regis.component.ts","D:\\GIT\\FinalProject3\\Frontend\\src\\app\\auth\\regis\\regis.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n@Component({\n  selector: 'app-regis',\n  templateUrl: './regis.component.html',\n  styleUrls: ['./regis.component.css']\n})\nexport class RegisComponent {\n  registrationForm: FormGroup;\n  errorMessage: string = '';\n  successMessage: string = '';\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthService) {\n    this.registrationForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]\n      ]});\n  }\n\n  onSubmit() {\n    if (this.registrationForm.valid) {\n      const formData = this.registrationForm.value;\n      this.authService.register(formData)\n        .subscribe(\n          response => {\n            this.successMessage = response;\n            this.errorMessage = '';\n          },\n          error => {\n            this.errorMessage = error;\n            this.successMessage = '';\n          }\n        );\n        }\n      }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n   <meta charset=\"UTF-8\">\n   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n   <title>Register</title>\n</head>\n<body>\n <!-- Section: Design Block -->\n<section class=\"\">\n   <!-- Jumbotron -->\n   <div class=\"px-4 py-5 px-md-5 text-center text-lg-start\" style=\"background-color: hsl(0, 0%, 100%)\">\n     <div class=\"container\">\n       <div class=\"row gx-lg-5 align-items-center\">\n         <div class=\"col-lg-6 mb-5 mb-lg-0\">\n           <h1 class=\"my-5 display-3 fw-bold ls-tight\">\n             Register <br />\n             <span class=\"text-primary\">Your Account</span>\n           </h1>\n         </div>\n \n         <div class=\"col-lg-6 mb-5 mb-lg-0\">\n           <div class=\"card\">\n             <div class=\"card-body py-5 px-md-5\">\n              <div class=\"container\">\n                <h2>Register</h2>\n                <form >\n                  <div class=\"row\">\n                    <div class=\"col-md-6 mb-4\">\n                      <div class=\"form-outline\">\n                        <input type=\"text\" id=\"name\"  name=\"name\" class=\"form-control\" placeholder=\"Name\" required />\n           \n                      </div>\n                    </div>\n                    <div class=\"col-md-6 mb-4\">\n                      <div class=\"form-outline\">\n                        <input type=\"email\" id=\"email\"  name=\"email\" class=\"form-control\" placeholder=\"Email\" required>\n                 \n                      </div>\n                    </div>\n                  </div>\n                \n                  <div class=\"form-outline mb-4\">\n                    <input type=\"text\" id=\"address\"  name=\"address\" class=\"form-control\" placeholder=\"Address\" required>\n                   \n                  </div>\n                \n                  <div class=\"form-outline mb-4\">\n                    <input type=\"password\" id=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n                \n                  </div>\n                \n                  <div class=\"text-center\">\n                    <p>Already have an account?</p>\n                    <button class=\"btn btn-primary btn-block mb-4\" routerLink=\"/login\" style=\"margin: 5px;\">\n                      Sign up\n                    </button>\n                  </div>\n<!--                 \n                  <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\n                    {{ errorMessage }}\n                  </div> -->\n                \n                  <!-- <button type=\"submit\" class=\"btn btn-primary btn-block mb-4\" style=\"margin: 5px;\">\n                    Sign up\n                  </button> -->\n                </form>\n                <p>Already have an account? <a routerLink=\"/login\">Sign in</a></p>\n              </div>              \n             </div>\n           </div>\n         </div>\n       </div>\n     </div>\n   </div>\n   <!-- Jumbotron -->\n </section>\n <!-- Section: Design Block -->\n</body>\n</html>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}