{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../api.service\";\nimport * as i3 from \"../movie.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction MovieDetailComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.movieTitle);\n  }\n}\nfunction MovieDetailComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.errorMessage, \" \");\n  }\n}\nfunction MovieDetailComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.successMessage, \" \");\n  }\n}\nexport class MovieDetailComponent {\n  constructor(route, apiService, movieService, router) {\n    this.route = route;\n    this.apiService = apiService;\n    this.movieService = movieService;\n    this.router = router;\n    this.movieId = null;\n    this.errorMessage = null;\n    this.successMessage = null;\n    this.movieTitle = null;\n  }\n  ngOnInit() {\n    // Retrieve the movie ID from the route parameters\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id'); // Assuming you pass the ID as 'id' in the route\n      if (id !== null) {\n        this.movieId = id;\n        // Fetch additional movie details including the title\n        this.movieService.getMovieDetails(this.movieId).subscribe(movieDetails => {\n          this.movieTitle = movieDetails.title;\n        }, error => {\n          this.errorMessage = 'Error fetching movie details';\n        });\n      } else {\n        // Handle the case where 'id' is null, for example, by displaying an error message.\n        this.errorMessage = 'Movie ID not found';\n      }\n    });\n  }\n  bookmarkMovie() {\n    // Here, you can implement the logic to save the movie ID to your bookmarks.\n    // You can use a service or any storage mechanism of your choice.\n    // For simplicity, we'll just display a success message here.\n    this.successMessage = `Movie with ID ${this.movieId} bookmarked successfully!`;\n  }\n  // Implement a method to fetch movie title by ID from your data source\n  fetchMovieTitleById(id) {\n    // You should implement the logic to fetch the title based on the ID here.\n    // For this example, we'll return a placeholder title.\n    return `Movie Title for ID ${id}`;\n  }\n}\n_class = MovieDetailComponent;\n_class.ɵfac = function MovieDetailComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.MovieService), i0.ɵɵdirectiveInject(i1.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-movie-detail\"]],\n  decls: 13,\n  vars: 4,\n  consts: [[1, \"detail-container\"], [\"class\", \"movie-details\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [3, \"submit\"], [1, \"form-group\"], [\"for\", \"movieId\"], [\"type\", \"text\", \"id\", \"movieId\", \"name\", \"movieId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-danger\"], [1, \"movie-details\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-success\"]],\n  template: function MovieDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n      i0.ɵɵtext(2, \"Movie Bookmark\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, MovieDetailComponent_div_3_Template, 3, 1, \"div\", 1);\n      i0.ɵɵtemplate(4, MovieDetailComponent_div_4_Template, 2, 1, \"div\", 2);\n      i0.ɵɵtemplate(5, MovieDetailComponent_div_5_Template, 2, 1, \"div\", 3);\n      i0.ɵɵelementStart(6, \"form\", 4);\n      i0.ɵɵlistener(\"submit\", function MovieDetailComponent_Template_form_submit_6_listener() {\n        return ctx.bookmarkMovie();\n      });\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Movie ID:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function MovieDetailComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.movieId = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"button\", 8);\n      i0.ɵɵtext(12, \"Bookmark Movie\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.movieId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.movieId);\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n  styles: [\".detail-container[_ngcontent-%COMP%] {\\n   max-width: 400px;\\n   margin: 40px auto;\\n   padding: 20px;\\n   border: 1px solid #ccc;\\n   border-radius: 5px;\\n }\\n \\n .form-group[_ngcontent-%COMP%] {\\n   margin-bottom: 15px;\\n }\\n \\n .btn-danger[_ngcontent-%COMP%] {\\n   width: 100%;\\n }\\n\\n .text[_ngcontent-%COMP%]{\\n  text-align: center;\\n }\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW92aWUtZGV0YWlsL21vdmllLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0dBQ0csZ0JBQWdCO0dBQ2hCLGlCQUFpQjtHQUNqQixhQUFhO0dBQ2Isc0JBQXNCO0dBQ3RCLGtCQUFrQjtDQUNwQjs7Q0FFQTtHQUNFLG1CQUFtQjtDQUNyQjs7Q0FFQTtHQUNFLFdBQVc7Q0FDYjs7Q0FFQTtFQUNDLGtCQUFrQjtDQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5kZXRhaWwtY29udGFpbmVyIHtcclxuICAgbWF4LXdpZHRoOiA0MDBweDtcclxuICAgbWFyZ2luOiA0MHB4IGF1dG87XHJcbiAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuIH1cclxuIFxyXG4gLmZvcm0tZ3JvdXAge1xyXG4gICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gfVxyXG4gXHJcbiAuYnRuLWRhbmdlciB7XHJcbiAgIHdpZHRoOiAxMDAlO1xyXG4gfVxyXG5cclxuIC50ZXh0e1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuIH1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","movieTitle","ɵɵtextInterpolate1","ctx_r1","errorMessage","ctx_r2","successMessage","MovieDetailComponent","constructor","route","apiService","movieService","router","movieId","ngOnInit","paramMap","subscribe","params","id","get","getMovieDetails","movieDetails","title","error","bookmarkMovie","fetchMovieTitleById","ɵɵdirectiveInject","i1","ActivatedRoute","i2","ApiService","i3","MovieService","Router","selectors","decls","vars","consts","template","MovieDetailComponent_Template","rf","ctx","ɵɵtemplate","MovieDetailComponent_div_3_Template","MovieDetailComponent_div_4_Template","MovieDetailComponent_div_5_Template","ɵɵlistener","MovieDetailComponent_Template_form_submit_6_listener","MovieDetailComponent_Template_input_ngModelChange_10_listener","$event","ɵɵproperty"],"sources":["D:\\GIT\\FinalProject2\\Frontend\\src\\app\\movie-detail\\movie-detail.component.ts","D:\\GIT\\FinalProject2\\Frontend\\src\\app\\movie-detail\\movie-detail.component.html"],"sourcesContent":["// movie-detail.component.ts\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../api.service'; \nimport { MovieService } from '../movie.service';\n\n@Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.css'],\n})\nexport class MovieDetailComponent implements OnInit {\n  movieId: string | null = null;\n  errorMessage: string | null = null;\n  successMessage: string | null = null;\n  movieTitle: string | null = null;\n\n  constructor(\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private movieService: MovieService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    // Retrieve the movie ID from the route parameters\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id'); // Assuming you pass the ID as 'id' in the route\n  \n      if (id !== null) {\n        this.movieId = id;\n  \n        // Fetch additional movie details including the title\n        this.movieService.getMovieDetails(this.movieId).subscribe(\n          (movieDetails: any) => {\n            this.movieTitle = movieDetails.title;\n          },\n          error => {\n            this.errorMessage = 'Error fetching movie details';\n          }\n        );\n      } else {\n        // Handle the case where 'id' is null, for example, by displaying an error message.\n        this.errorMessage = 'Movie ID not found';\n      }\n    });\n  }\n  \n\n\n  bookmarkMovie() {\n    // Here, you can implement the logic to save the movie ID to your bookmarks.\n    // You can use a service or any storage mechanism of your choice.\n    // For simplicity, we'll just display a success message here.\n    this.successMessage = `Movie with ID ${this.movieId} bookmarked successfully!`;\n  }\n\n  // Implement a method to fetch movie title by ID from your data source\n  fetchMovieTitleById(id: string): string {\n    // You should implement the logic to fetch the title based on the ID here.\n    // For this example, we'll return a placeholder title.\n    return `Movie Title for ID ${id}`;\n  }\n}","<!-- movie-detail.component.html -->\n\n<div class=\"detail-container\">\n   <h3>Movie Bookmark</h3>\n \n   <div *ngIf=\"movieId\" class=\"movie-details\">\n     <h2>{{ movieTitle }}</h2>\n   </div>\n \n   <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\n     {{ errorMessage }}\n   </div>\n \n   <div *ngIf=\"successMessage\" class=\"alert alert-success\">\n    {{ successMessage }}\n  </div>\n  \n  \n \n   <!-- Bookmark Movie Form -->\n   <form (submit)=\"bookmarkMovie()\">\n     <div class=\"form-group\">\n       <label for=\"movieId\">Movie ID:</label>\n       <input\n         type=\"text\"\n         class=\"form-control\"\n         id=\"movieId\"\n         name=\"movieId\"\n         [(ngModel)]=\"movieId\"\n         required\n       />\n     </div>\n     <button type=\"submit\" class=\"btn btn-danger\">Bookmark Movie</button>\n   </form>\n </div>\n "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}