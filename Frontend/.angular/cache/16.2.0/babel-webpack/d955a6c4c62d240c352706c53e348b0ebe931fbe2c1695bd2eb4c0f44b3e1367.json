{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(formBuilder, authService, router) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n    this.form = this.formBuilder.group({\n      email: [''],\n      password: ['']\n    });\n  }\n  submit() {\n    const emailValue = this.form.get('email')?.value;\n    const passwordValue = this.form.get('password')?.value;\n    this.authService.login({\n      email: emailValue,\n      password: passwordValue\n    }).subscribe(response => {\n      const accessToken = response.accessToken;\n      localStorage.setItem('accessToken', accessToken); // Store the token in localStorage\n      // Log the token to the console\n      console.log('Access Token:', accessToken);\n      // console.log('123')\n      alert('Login successful');\n      this.router.navigate(['/movies']); // Redirect to protected route\n    }, error => {\n      alert('Login failed');\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","formBuilder","authService","router","form","group","email","password","submit","emailValue","get","value","passwordValue","login","subscribe","response","accessToken","localStorage","setItem","console","log","alert","navigate","error","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\GIT\\FinalProject3\\Frontend\\src\\app\\auth\\login\\login.component.ts"],"sourcesContent":["  import { Component } from '@angular/core';\n  import { FormBuilder, FormGroup } from '@angular/forms';\n  import { AuthService } from '../auth.service';\n  import { Router } from '@angular/router';\n\n  @Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n  })\n  export class LoginComponent {\n    form: FormGroup;\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.form = this.formBuilder.group({\n      email: [''],\n      password: [''],\n    });\n  }\n  submit() {\n    const emailValue = this.form.get('email')?.value;\n    const passwordValue = this.form.get('password')?.value;\n  \n    this.authService.login({ email: emailValue, password: passwordValue }).subscribe(\n      (response) => {\n        const accessToken = response.accessToken;\n        localStorage.setItem('accessToken', accessToken); // Store the token in localStorage\n        \n        // Log the token to the console\n        console.log('Access Token:', accessToken)\n        // console.log('123')\n  \n        alert('Login successful');\n        this.router.navigate(['/movies']); // Redirect to protected route\n      },\n      (error) => {\n        alert('Login failed');\n      }\n    );\n  }\n  \n}\n"],"mappings":";AAAE,SAASA,SAAS,QAAQ,eAAe;AAUlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAE3BC,YACUC,WAAwB,EACxBC,WAAwB,EACxBC,MAAc;IAFd,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IAEd,IAAI,CAACC,IAAI,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,QAAQ,EAAE,CAAC,EAAE;KACd,CAAC;EACJ;EACAC,MAAMA,CAAA;IACJ,MAAMC,UAAU,GAAG,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK;IAChD,MAAMC,aAAa,GAAG,IAAI,CAACR,IAAI,CAACM,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK;IAEtD,IAAI,CAACT,WAAW,CAACW,KAAK,CAAC;MAAEP,KAAK,EAAEG,UAAU;MAAEF,QAAQ,EAAEK;IAAa,CAAE,CAAC,CAACE,SAAS,CAC7EC,QAAQ,IAAI;MACX,MAAMC,WAAW,GAAGD,QAAQ,CAACC,WAAW;MACxCC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEF,WAAW,CAAC,CAAC,CAAC;MAElD;MACAG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,WAAW,CAAC;MACzC;MAEAK,KAAK,CAAC,kBAAkB,CAAC;MACzB,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC,EACAC,KAAK,IAAI;MACRF,KAAK,CAAC,cAAc,CAAC;IACvB,CAAC,CACF;EACH;CAED;AAlCctB,cAAc,GAAAyB,UAAA,EAL1B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW5B,cAAc,CAkC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}