{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000';\n  }\n  registerUser(userData) {\n    return this.http.post(`${this.apiUrl}/register`, userData).pipe(catchError(error => {\n      console.error('Observable error:', error);\n      throw error;\n    }));\n  }\n  register(user) {\n    const url = `${this.apiUrl}/register`;\n    return this.http.post(url, user);\n  }\n  login(credentials) {\n    const url = `${this.apiUrl}/login`;\n    return this.http.post(url, credentials);\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","http","apiUrl","registerUser","userData","post","pipe","catchError","error","console","register","user","url","login","credentials","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\GIT\\FinalProject3\\Frontend\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = 'http://localhost:3000'\n    constructor(private http : HttpClient) {}\n\n    registerUser(userData: any) {\n      return this.http.post(`${this.apiUrl}/register`, userData).pipe(\n        catchError(error => {\n          console.error('Observable error:', error);\n          throw error;\n        })\n      )\n    }\n    register(user: any): Observable<any> {\n      const url = `${this.apiUrl}/register`;\n      return this.http.post(url, user);\n    }\n    \n    login(credentials: { email: string; password: string }): Observable<any> {\n      const url = `${this.apiUrl}/login`;\n      return this.http.post(url, credentials);\n    }\n  \n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,WAAW;EAEpBC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;IADlB,KAAAC,MAAM,GAAG,uBAAuB;EACE;EAExCC,YAAYA,CAACC,QAAa;IACxB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,WAAW,EAAEE,QAAQ,CAAC,CAACE,IAAI,CAC7DC,UAAU,CAACC,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACH;EACAE,QAAQA,CAACC,IAAS;IAChB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACV,MAAM,WAAW;IACrC,OAAO,IAAI,CAACD,IAAI,CAACI,IAAI,CAACO,GAAG,EAAED,IAAI,CAAC;EAClC;EAEAE,KAAKA,CAACC,WAAgD;IACpD,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACV,MAAM,QAAQ;IAClC,OAAO,IAAI,CAACD,IAAI,CAACI,IAAI,CAACO,GAAG,EAAEE,WAAW,CAAC;EACzC;;SApBSf,WAAW;;mBAAXA,MAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXnB,MAAW;EAAAoB,OAAA,EAAXpB,MAAW,CAAAqB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}