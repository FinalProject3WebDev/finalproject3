{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RegisterComponent = class RegisterComponent {\n  constructor(authService, router, toastr) {\n    this.authService = authService;\n    this.router = router;\n    this.toastr = toastr;\n    this.name = '';\n    this.email = '';\n    this.password = '';\n    this.role = 'member';\n    this.address = '';\n  }\n  onSubmit() {\n    const userData = {\n      name: this.name,\n      email: this.email,\n      role: this.role,\n      address: this.address,\n      password: this.password\n    };\n    this.authService.registerUser(userData).subscribe(response => {\n      alert('Registration successful!l');\n      this.router.navigate(['/login']); // Redirect to dashboard or desired route\n    }, error => {\n      // Handle error\n      console.error('Registration error:', error);\n      if (error.status === 400) {\n        this.toastr.error('Email or username is already in use.');\n      } else {\n        this.toastr.error('An error occurred during registration.');\n      }\n    });\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);","map":{"version":3,"names":["Component","RegisterComponent","constructor","authService","router","toastr","name","email","password","role","address","onSubmit","userData","registerUser","subscribe","response","alert","navigate","error","console","status","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\GIT\\FinalProject3\\Frontend\\src\\app\\auth\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n  name: string = '';\n  email: string = '';\n  password: string = '';\n  role: string = 'member';\n  address: string = '';\n \n  constructor(private authService:AuthService, private router: Router,private toastr: ToastrService) {}\n\n  onSubmit() {\n    const userData = {\n      name: this.name,\n      email: this.email,\n      role: this.role,\n      address: this.address,\n      password: this.password\n    };\n  \n    this.authService.registerUser(userData).subscribe(\n      response => {\n       \n        alert('Registration successful!l');\n        this.router.navigate(['/login']); // Redirect to dashboard or desired route\n      },\n      error => {\n        // Handle error\n        console.error('Registration error:', error);\n  \n        if (error.status === 400) {\n          this.toastr.error('Email or username is already in use.');\n        } else {\n          this.toastr.error('An error occurred during registration.');\n        }\n      }\n    );\n  }\n}\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAQ5BC,YAAoBC,WAAuB,EAAUC,MAAc,EAASC,MAAqB;IAA7E,KAAAF,WAAW,GAAXA,WAAW;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAAiB,KAAAC,MAAM,GAANA,MAAM;IANlF,KAAAC,IAAI,GAAW,EAAE;IACjB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,IAAI,GAAW,QAAQ;IACvB,KAAAC,OAAO,GAAW,EAAE;EAEgF;EAEpGC,QAAQA,CAAA;IACN,MAAMC,QAAQ,GAAG;MACfN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBE,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBF,QAAQ,EAAE,IAAI,CAACA;KAChB;IAED,IAAI,CAACL,WAAW,CAACU,YAAY,CAACD,QAAQ,CAAC,CAACE,SAAS,CAC/CC,QAAQ,IAAG;MAETC,KAAK,CAAC,2BAA2B,CAAC;MAClC,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,EACDC,KAAK,IAAG;MACN;MACAC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAE3C,IAAIA,KAAK,CAACE,MAAM,KAAK,GAAG,EAAE;QACxB,IAAI,CAACf,MAAM,CAACa,KAAK,CAAC,sCAAsC,CAAC;OAC1D,MAAM;QACL,IAAI,CAACb,MAAM,CAACa,KAAK,CAAC,wCAAwC,CAAC;;IAE/D,CAAC,CACF;EACH;CACD;AArCYjB,iBAAiB,GAAAoB,UAAA,EAL7BrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWvB,iBAAiB,CAqC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}